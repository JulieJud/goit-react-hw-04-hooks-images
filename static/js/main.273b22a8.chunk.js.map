{"version":3,"sources":["components/ImageGallery/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Searchbar/SearchBar.module.css","components/Searchbar/Searchbar.jsx","services/imagesApi.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","components/App.js","index.js"],"names":["module","exports","SearchBar","onSearch","className","s","searchbar","searchForm","onSubmit","e","preventDefault","target","elements","imageName","value","reset","type","searchForm_button","searchForm_button_label","searchForm_input","autoComplete","autoFocus","placeholder","name","getImageByAxious","axios","create","baseURL","params","key","image_type","orientation","per_page","fetchImages","pageNumber","a","data","console","log","hits","ImageGalleryItem","webformatURL","largeImageURL","tags","handleSelectedImage","imageGalleryItem","src","alt","imageGalleryItem_image","onClick","ImageGallery","images","imageGallery","map","id","ButtonLoadMore","button","Spinner","style","textAlign","color","height","width","modalRoot","document","querySelector","Modal","imgTag","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","overlay","event","currentTarget","modal","App","useState","setImageName","setLargeImageURL","setImages","page","setPage","status","setStatus","imgTags","setImgTags","trim","length","toast","error","scrollTo","top","documentElement","scrollHeight","behavior","getImage","Button","p","defaultProps","children","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.273b22a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGalleryItem\":\"ImageGalleryItem_imageGalleryItem__2Brwa\",\"imageGalleryItem_image\":\"ImageGalleryItem_imageGalleryItem_image__2O7bW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__3jc1b\",\"modal\":\"Modal_modal__2duNE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"ImageGallery_imageGallery__2IYih\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__b6_P-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"SearchBar_searchbar__2ulpf\",\"searchForm\":\"SearchBar_searchForm__1Rz1W\",\"searchForm_button\":\"SearchBar_searchForm_button__3P1si\",\"searchForm_button_label\":\"SearchBar_searchForm_button_label__2Ps9i\",\"searchForm_input\":\"SearchBar_searchForm_input__aOAgA\"};","import s from './SearchBar.module.css';\r\n\r\nconst SearchBar = ({ onSearch }) => {\r\n  return (\r\n    <header className={s.searchbar}>\r\n      <form\r\n        className={s.searchForm}\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          onSearch(e.target.elements.imageName.value);\r\n          e.target.reset();\r\n        }}\r\n      >\r\n        <button type=\"submit\" className={s.searchForm_button}>\r\n          <span className={s.searchForm_button_label}>Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className={s.searchForm_input}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          name=\"imageName\"\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import axios from 'axios';\n\n//axios.defaults.baseURL = 'https://pixabay.com/api';\n\nconst getImageByAxious = axios.create({\n  baseURL: 'https://pixabay.com/api',\n  params: {\n    key: '22647650-093efc913fe4b5bfd764725e8',\n    image_type: 'photo',\n    orientation: 'horizontal',\n    per_page: '12',\n  },\n});\n\nconst fetchImages = async (imageName, pageNumber) => {\n  const { data } = await getImageByAxious(\n    `/?q=${imageName}&page=${pageNumber}`,\n  );\n  console.log(data);\n  return data.hits;\n};\n\nexport default fetchImages;\n","import PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({\n  webformatURL,\n  largeImageURL,\n  tags,\n  handleSelectedImage,\n}) => {\n  return (\n    <li className={s.imageGalleryItem}>\n      <img\n        src={webformatURL}\n        alt={tags}\n        className={s.imageGalleryItem_image}\n        onClick={() => handleSelectedImage(largeImageURL, tags)}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.shape({\n    webformatURL: PropTypes.string.isRequired,\n    largeImageURL: PropTypes.string.isRequired,\n    tags: PropTypes.string,\n  }),\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\nimport s from './ImageGallery.module.css';\n\nconst ImageGallery = ({ images, handleSelectedImage }) => {\n  return (\n    <ul className={s.imageGallery}>\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => (\n        <ImageGalleryItem\n          key={id}\n          webformatURL={webformatURL}\n          largeImageURL={largeImageURL}\n          tags={tags}\n          handleSelectedImage={handleSelectedImage}\n        />\n      ))}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\n\r\nconst ButtonLoadMore = ({ onClick }) => {\r\n  return (\r\n    <button type=\"button\" className={s.button} onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\nButtonLoadMore.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ButtonLoadMore;\r\n","import Loader from 'react-loader-spinner';\r\n\r\nimport React from 'react';\r\n\r\nconst Spinner = () => {\r\n  const style = { textAlign: 'center' };\r\n  return (\r\n    <div style={style}>\r\n      <Loader type=\"Hearts\" color=\"#00BFFF\" height={80} width={80} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ largeImageURL, imgTag, onClose }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={s.overlay} onClick={handleBackdropClick}>\n      <div className={s.modal}>\n        {' '}\n        <img src={largeImageURL} alt={imgTag} />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.defaultProps = {\n  onClose: () => null,\n  children: null,\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func,\n  children: PropTypes.node,\n};\n","import { useState, useEffect } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport SearchBar from './Searchbar/Searchbar';\nimport fetchImages from '../services/imagesApi';\nimport ImageGallery from './ImageGallery/ImageGallery';\nimport ButtonLoadMore from './Button/Button';\nimport Spinner from './Loader/Loader';\nimport Modal from './Modal/Modal';\n\nexport default function App() {\n  const [imageName, setImageName] = useState(null);\n  const [largeImageURL, setLargeImageURL] = useState('');\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [status, setStatus] = useState('idle');\n  const [imgTags, setImgTags] = useState('');\n\n  const handleFormSubmit = imageName => {\n    setImageName(imageName);\n    setPage(1);\n    setImages([]);\n  };\n\n  const handleLoadMore = () => {\n    setPage(p => p + 1);\n  };\n\n  const handleSelectedImage = (largeImageURL, imgTags) => {\n    setLargeImageURL(largeImageURL);\n    setImgTags(imgTags);\n  };\n\n  const closeModal = () => {\n    setLargeImageURL('');\n  };\n\n  useEffect(() => {\n    if (!imageName) return;\n\n    async function getImage() {\n      try {\n        setStatus('pending');\n        const images = await fetchImages(imageName, page);\n\n        setStatus('resolved');\n\n        if (imageName.trim() === '' || images.length === 0) {\n          return toast.error(`no picture with name ${imageName}`);\n        }\n\n        setImages([...images, ...images]);\n\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      } catch (error) {\n        setStatus('rejected');\n        return toast.error('smt going wrong');\n      }\n    }\n\n    getImage();\n  }, [imageName, page]);\n\n  return (\n    <div>\n      <SearchBar onSearch={handleFormSubmit} />\n      {images.length < 1 && (\n        <>\n          <h2 className=\"titleName\">The gallery is empty! Use search field!</h2>\n        </>\n      )}\n\n      <ImageGallery images={images} handleSelectedImage={handleSelectedImage} />\n      {status === 'pending' && <Spinner />}\n\n      {images.length !== 0 && <ButtonLoadMore onClick={handleLoadMore} />}\n\n      <Toaster />\n      {largeImageURL && (\n        <Modal\n          onClose={closeModal}\n          largeImageURL={largeImageURL}\n          imgTags={imgTags}\n        />\n      )}\n    </div>\n  );\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}